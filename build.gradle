/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}
dependencies {
    // JPA API
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    // Hibernate ORM Implementation
    implementation 'org.hibernate.orm:hibernate-core:6.2.7.Final'

    // H2 In-Memory Database (for runtime)
    runtimeOnly 'com.h2database:h2:2.1.214'

    // InfluxDB client library for connecting to the time-series database
    implementation 'org.influxdb:influxdb-java:2.23'
    // SLF4J for logging, which is a runtime dependency for the InfluxDB client
    runtimeOnly("org.slf4j:slf4j-simple:2.0.13")

    implementation 'com.google.guava:guava:32.1.2-jre'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.1'
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation libs.org.mockito.mockito.core

    def lombokVersion = '1.18.42'
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

group = 'com.ticketmaster'
version = '2.0.0-SNAPSHOT'
description = 'experiments4j'

java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    useJUnitPlatform()
}
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact javadocJar
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
}